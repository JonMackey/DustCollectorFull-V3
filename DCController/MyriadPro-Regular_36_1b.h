// Subset font created by SubsetFontCreator
// For subset: " "++-:??AZaahh"

#ifndef MyriadPro_Regular_36_1b_h
#define MyriadPro_Regular_36_1b_h

#include "XFontGlyph.h"
#include "XFont16BitDataStream.h"

namespace MyriadPro_Regular_36_1b
{
	const FontHeader	fontHeader PROGMEM =
	{
		1,		// version, currently version = 1
		1,		// oneBit, 1 = 1 bit per pixel, 0 = 8 bit (antialiased)
		0,		// rotated, glyph data is rotated (applies to 1 bit only)
		0,		// horizontal, addressing for rotated data, else vertical
		0,		// monospaced, fixed width font (for this subset)
		27,		// ascent, font in pixels
		-9,		// descent, font in pixels
		36,		// height, font height (ascent+descent+leading) in pixels
		//43,		// height, font height (ascent+descent+leading) in pixels
		30,		// width, widest glyph advanceX within subset in pixels
		8,		// numCharcodeRuns
		47		// numCharCodes
	};
	
	const CharcodeRun	charcodeRun[] PROGMEM = // {start, entryIndex}, ...
	{
		{0x0020, 0}, {0x002B, 3}, {0x002D, 4}, {0x003F, 18}, {0x0041, 19},
		{0x0061, 45}, {0x0068, 46}, {0xFFFF, 47}
	};
	
	const uint16_t	glyphDataOffset[] PROGMEM =
	{
		0x0000, 0x0005, 0x0017, 0x0025, 0x0058, 0x0060, 0x0068, 0x0094,
		0x00C9, 0x00E6, 0x0118, 0x0147, 0x017F, 0x01AE, 0x01E3, 0x0215,
		0x024A, 0x027F, 0x028D, 0x02B5, 0x02F9, 0x032D, 0x036E, 0x03B2,
		0x03E0, 0x040E, 0x0452, 0x0490, 0x049F, 0x04C7, 0x0502, 0x0530,
		0x0584, 0x05C2, 0x060C, 0x0640, 0x0696, 0x06CD, 0x06FE, 0x073C,
		0x077A, 0x07BE, 0x081E, 0x085F, 0x08A0, 0x08DE, 0x0903, 0x0936
	};
	
	const uint8_t	glyphData[] PROGMEM =
	{
		0x08, 0x00, 0x1B, 0x00, 0x00, 0x08, 0x02, 0x02, 0x19, 0x04, 0xFF, 0xFF,
		0x77, 0x77, 0x77, 0x77, 0x76, 0x66, 0x66, 0x00, 0x0F, 0xFF, 0x60, 0x0C,
		0x02, 0x02, 0x09, 0x08, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE3, 0xE3, 0xC3,
		0xC3, 0x15, 0x01, 0x08, 0x13, 0x13, 0x00, 0x60, 0x00, 0x0C, 0x00, 0x01,
		0x80, 0x00, 0x30, 0x00, 0x06, 0x00, 0x00, 0xC0, 0x00, 0x18, 0x00, 0x03,
		0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x01, 0x80, 0x00, 0x30, 0x00, 0x06,
		0x00, 0x00, 0xC0, 0x00, 0x18, 0x00, 0x03, 0x00, 0x00, 0x60, 0x00, 0x0C,
		0x00, 0x01, 0x80, 0x00, 0x0B, 0x01, 0x10, 0x02, 0x09, 0xFF, 0xFF, 0xC0,
		0x07, 0x02, 0x16, 0x05, 0x04, 0x0F, 0xFF, 0x60, 0x0C, 0x00, 0x02, 0x1A,
		0x0C, 0x00, 0x30, 0x07, 0x00, 0x60, 0x06, 0x00, 0xE0, 0x0C, 0x00, 0xC0,
		0x1C, 0x01, 0x80, 0x38, 0x03, 0x00, 0x30, 0x07, 0x00, 0x60, 0x0E, 0x00,
		0xC0, 0x0C, 0x01, 0xC0, 0x18, 0x01, 0x80, 0x38, 0x03, 0x00, 0x70, 0x06,
		0x00, 0x60, 0x0E, 0x00, 0x12, 0x01, 0x03, 0x18, 0x10, 0x03, 0xE0, 0x0F,
		0xF8, 0x1F, 0x7C, 0x3C, 0x1C, 0x38, 0x0E, 0x78, 0x0E, 0x70, 0x0F, 0x70,
		0x07, 0x70, 0x07, 0xF0, 0x07, 0xF0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xF0,
		0x07, 0xF0, 0x07, 0x70, 0x07, 0x70, 0x07, 0x70, 0x0F, 0x78, 0x0E, 0x38,
		0x0E, 0x3C, 0x1C, 0x1F, 0x7C, 0x0F, 0xF8, 0x07, 0xE0, 0x12, 0x04, 0x03,
		0x18, 0x08, 0x0F, 0x3F, 0xFF, 0xEF, 0xCF, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F,
		0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F,
		0x0F, 0x0F, 0x12, 0x02, 0x03, 0x18, 0x0F, 0x0F, 0xC0, 0xFF, 0xE3, 0xFF,
		0xE3, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0x80, 0x07, 0x00, 0x0E, 0x00, 0x1C,
		0x00, 0x78, 0x00, 0xE0, 0x01, 0xC0, 0x07, 0x00, 0x1C, 0x00, 0x78, 0x01,
		0xE0, 0x07, 0x80, 0x1E, 0x00, 0x78, 0x01, 0xE0, 0x07, 0x80, 0x1F, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0x12, 0x02, 0x03, 0x18, 0x0E, 0x1F, 0xC1, 0xFF,
		0x87, 0xFF, 0x10, 0x1E, 0x00, 0x38, 0x00, 0xE0, 0x03, 0x80, 0x0E, 0x00,
		0x70, 0x03, 0xC1, 0xFC, 0x07, 0xF0, 0x03, 0xF0, 0x01, 0xE0, 0x03, 0xC0,
		0x07, 0x00, 0x1C, 0x00, 0x70, 0x01, 0xC0, 0x0F, 0x80, 0x7B, 0xFF, 0xCF,
		0xFE, 0x0F, 0xE0, 0x12, 0x01, 0x03, 0x18, 0x11, 0x00, 0x38, 0x00, 0x3C,
		0x00, 0x3E, 0x00, 0x1B, 0x00, 0x1F, 0x80, 0x1D, 0xC0, 0x0E, 0xE0, 0x0E,
		0x70, 0x0E, 0x38, 0x06, 0x1C, 0x07, 0x0E, 0x07, 0x07, 0x07, 0x03, 0x83,
		0x81, 0xC3, 0x80, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x1C, 0x00, 0x0E,
		0x00, 0x07, 0x00, 0x03, 0x80, 0x01, 0xC0, 0x00, 0xE0, 0x00, 0x70, 0x12,
		0x02, 0x03, 0x18, 0x0E, 0x3F, 0xFC, 0xFF, 0xF3, 0xFF, 0xCE, 0x00, 0x30,
		0x00, 0xC0, 0x03, 0x00, 0x1C, 0x00, 0x70, 0x01, 0xFF, 0x07, 0xFF, 0x00,
		0x7E, 0x00, 0x78, 0x00, 0xF0, 0x01, 0xC0, 0x07, 0x00, 0x1C, 0x00, 0x70,
		0x03, 0xC0, 0x0E, 0x80, 0x7B, 0xFF, 0xCF, 0xFE, 0x0F, 0xC0, 0x12, 0x01,
		0x03, 0x18, 0x10, 0x00, 0x3C, 0x01, 0xFC, 0x03, 0xFC, 0x0F, 0x80, 0x1E,
		0x00, 0x1C, 0x00, 0x38, 0x00, 0x38, 0x00, 0x71, 0xF0, 0x77, 0xFC, 0x7F,
		0x7E, 0xF8, 0x1E, 0xF0, 0x0F, 0xF0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xF0,
		0x07, 0x70, 0x07, 0x70, 0x07, 0x78, 0x0E, 0x3C, 0x1E, 0x1F, 0x7C, 0x0F,
		0xF8, 0x03, 0xE0, 0x12, 0x02, 0x03, 0x18, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xF8, 0x00, 0xE0, 0x01, 0xC0, 0x07, 0x00, 0x0E, 0x00, 0x38, 0x00,
		0x70, 0x01, 0xC0, 0x03, 0x80, 0x0E, 0x00, 0x1C, 0x00, 0x70, 0x00, 0xE0,
		0x03, 0xC0, 0x07, 0x00, 0x1E, 0x00, 0x38, 0x00, 0xF0, 0x01, 0xC0, 0x03,
		0x80, 0x0E, 0x00, 0x1C, 0x00, 0x12, 0x01, 0x03, 0x18, 0x10, 0x03, 0xF0,
		0x0F, 0xF8, 0x1E, 0x7C, 0x38, 0x1E, 0x38, 0x0E, 0x70, 0x0E, 0x70, 0x0E,
		0x78, 0x0E, 0x38, 0x1E, 0x3E, 0x3C, 0x1F, 0xF8, 0x07, 0xF0, 0x1F, 0xFC,
		0x3C, 0x3E, 0x78, 0x0E, 0x70, 0x0F, 0xF0, 0x07, 0xF0, 0x07, 0xF0, 0x07,
		0x70, 0x0F, 0x78, 0x0E, 0x3E, 0x3C, 0x1F, 0xF8, 0x07, 0xE0, 0x12, 0x01,
		0x03, 0x18, 0x10, 0x03, 0xE0, 0x0F, 0xF8, 0x1F, 0x7C, 0x38, 0x1E, 0x78,
		0x0E, 0x70, 0x0F, 0x70, 0x07, 0x70, 0x07, 0xF0, 0x07, 0x70, 0x07, 0x70,
		0x07, 0x78, 0x0F, 0x3C, 0x1F, 0x3F, 0xF7, 0x0F, 0xE7, 0x00, 0x0E, 0x00,
		0x0E, 0x00, 0x1E, 0x00, 0x1C, 0x00, 0x78, 0x00, 0xF0, 0x3F, 0xE0, 0x3F,
		0xC0, 0x3E, 0x00, 0x07, 0x02, 0x0A, 0x11, 0x04, 0x6F, 0xFF, 0x00, 0x00,
		0x00, 0x00, 0x0F, 0xFF, 0x60, 0x0F, 0x02, 0x02, 0x19, 0x0B, 0x3F, 0x1F,
		0xF3, 0xFF, 0x00, 0xF0, 0x0E, 0x01, 0xC0, 0x38, 0x0F, 0x01, 0xC0, 0x78,
		0x1E, 0x03, 0x80, 0xE0, 0x3C, 0x07, 0x00, 0xE0, 0x1C, 0x03, 0x80, 0x00,
		0x00, 0x00, 0x00, 0x38, 0x0F, 0x81, 0xE0, 0x1C, 0x00, 0x16, 0x01, 0x02,
		0x19, 0x14, 0x00, 0xF0, 0x00, 0x0F, 0x00, 0x01, 0xF8, 0x00, 0x1F, 0x80,
		0x01, 0xB8, 0x00, 0x39, 0xC0, 0x03, 0x9C, 0x00, 0x39, 0xC0, 0x07, 0x0E,
		0x00, 0x70, 0xE0, 0x07, 0x0E, 0x00, 0xE0, 0x70, 0x0E, 0x07, 0x00, 0xE0,
		0x70, 0x1C, 0x03, 0x81, 0xFF, 0xF8, 0x1F, 0xFF, 0x83, 0x80, 0x3C, 0x38,
		0x01, 0xC3, 0x80, 0x1C, 0x78, 0x01, 0xE7, 0x00, 0x0E, 0x70, 0x00, 0xEF,
		0x00, 0x0F, 0xE0, 0x00, 0x70, 0x14, 0x03, 0x02, 0x19, 0x0F, 0xFF, 0xC1,
		0xFF, 0xE3, 0xEF, 0xE7, 0x01, 0xEE, 0x03, 0xDC, 0x03, 0xB8, 0x07, 0x70,
		0x0E, 0xE0, 0x3D, 0xC0, 0x73, 0x87, 0xC7, 0xFE, 0x0F, 0xFF, 0x1C, 0x0F,
		0x38, 0x0F, 0x70, 0x0F, 0xE0, 0x0F, 0xC0, 0x1F, 0x80, 0x3F, 0x00, 0xFE,
		0x01, 0xFC, 0x07, 0xBC, 0xFE, 0x7F, 0xF8, 0xFF, 0x80, 0x15, 0x01, 0x02,
		0x19, 0x13, 0x00, 0x7F, 0x80, 0x3F, 0xFC, 0x1F, 0xFF, 0x07, 0xC0, 0x01,
		0xE0, 0x00, 0x78, 0x00, 0x0E, 0x00, 0x03, 0xC0, 0x00, 0x70, 0x00, 0x0E,
		0x00, 0x03, 0xC0, 0x00, 0x78, 0x00, 0x0F, 0x00, 0x01, 0xE0, 0x00, 0x3C,
		0x00, 0x03, 0x80, 0x00, 0x70, 0x00, 0x0F, 0x00, 0x01, 0xE0, 0x00, 0x1E,
		0x00, 0x01, 0xE0, 0x00, 0x3F, 0x00, 0x03, 0xFF, 0xF0, 0x1F, 0xFF, 0x00,
		0xFF, 0x80, 0x18, 0x03, 0x02, 0x19, 0x14, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0,
		0xFD, 0xFF, 0x0E, 0x00, 0xF8, 0xE0, 0x07, 0xCE, 0x00, 0x3C, 0xE0, 0x01,
		0xEE, 0x00, 0x0E, 0xE0, 0x00, 0xEE, 0x00, 0x0F, 0xE0, 0x00, 0xFE, 0x00,
		0x0F, 0xE0, 0x00, 0xFE, 0x00, 0x0F, 0xE0, 0x00, 0xEE, 0x00, 0x0E, 0xE0,
		0x00, 0xEE, 0x00, 0x1E, 0xE0, 0x01, 0xCE, 0x00, 0x3C, 0xE0, 0x07, 0x8E,
		0x01, 0xF0, 0xFF, 0xFE, 0x0F, 0xFF, 0x80, 0xFF, 0xC0, 0x00, 0x12, 0x03,
		0x02, 0x19, 0x0D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x0E, 0x00, 0x70,
		0x03, 0x80, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x3F, 0xFD, 0xFF, 0xEF, 0xFF,
		0x70, 0x03, 0x80, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xC0, 0x0E,
		0x00, 0x70, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x12, 0x03, 0x02, 0x19,
		0x0D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x0E, 0x00, 0x70, 0x03, 0x80,
		0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xFF, 0xEF, 0xFF, 0x7F, 0xFB,
		0x80, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xC0, 0x0E, 0x00, 0x70,
		0x03, 0x80, 0x1C, 0x00, 0xE0, 0x00, 0x17, 0x01, 0x02, 0x19, 0x14, 0x00,
		0x3F, 0xC0, 0x1F, 0xFE, 0x07, 0xFF, 0xE0, 0xF8, 0x02, 0x1E, 0x00, 0x03,
		0xC0, 0x00, 0x38, 0x00, 0x07, 0x80, 0x00, 0x70, 0x00, 0x07, 0x00, 0x00,
		0xF0, 0x00, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0xFF, 0x00, 0xFF, 0xF0, 0x0F,
		0xF7, 0x00, 0x07, 0x70, 0x00, 0x77, 0x80, 0x07, 0x78, 0x00, 0x73, 0xC0,
		0x07, 0x1E, 0x00, 0x71, 0xF8, 0x07, 0x0F, 0xFF, 0xF0, 0x3F, 0xFF, 0x00,
		0x7F, 0x80, 0x17, 0x03, 0x02, 0x19, 0x12, 0xE0, 0x01, 0xF8, 0x00, 0x7E,
		0x00, 0x1F, 0x80, 0x07, 0xE0, 0x01, 0xF8, 0x00, 0x7E, 0x00, 0x1F, 0x80,
		0x07, 0xE0, 0x01, 0xF8, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xF8, 0x00, 0x7E, 0x00, 0x1F, 0x80, 0x07, 0xE0, 0x01, 0xF8, 0x00, 0x7E,
		0x00, 0x1F, 0x80, 0x07, 0xE0, 0x01, 0xF8, 0x00, 0x7E, 0x00, 0x1F, 0x80,
		0x07, 0xE0, 0x01, 0xC0, 0x09, 0x03, 0x02, 0x19, 0x03, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x0D, 0x00, 0x02, 0x19, 0x0B,
		0x00, 0xE0, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00,
		0xE0, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xE0,
		0x1C, 0x03, 0x80, 0xF0, 0x1C, 0x07, 0xBF, 0xE7, 0xF8, 0xFE, 0x00, 0x14,
		0x03, 0x02, 0x19, 0x11, 0xE0, 0x0F, 0x70, 0x0F, 0x38, 0x0F, 0x1C, 0x07,
		0x0E, 0x07, 0x07, 0x07, 0x83, 0x87, 0x81, 0xC7, 0x80, 0xE3, 0x80, 0x73,
		0x80, 0x3B, 0x80, 0x1F, 0xE0, 0x0F, 0xF8, 0x07, 0xDC, 0x03, 0xCF, 0x01,
		0xC3, 0xC0, 0xE0, 0xE0, 0x70, 0x78, 0x38, 0x1E, 0x1C, 0x07, 0x0E, 0x03,
		0xC7, 0x00, 0xF3, 0x80, 0x39, 0xC0, 0x1E, 0xE0, 0x07, 0x80, 0x11, 0x03,
		0x02, 0x19, 0x0D, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xC0, 0x0E, 0x00, 0x70,
		0x03, 0x80, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xC0, 0x0E, 0x00,
		0x70, 0x03, 0x80, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xC0, 0x0E,
		0x00, 0x70, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x1D, 0x02, 0x02, 0x19,
		0x19, 0x3C, 0x00, 0x1E, 0x1E, 0x00, 0x0F, 0x0F, 0x80, 0x0F, 0x87, 0xC0,
		0x07, 0xE7, 0x60, 0x03, 0x73, 0xB8, 0x03, 0xB9, 0xDC, 0x01, 0xDC, 0xEE,
		0x00, 0xCE, 0x73, 0x80, 0xE7, 0x39, 0xC0, 0x73, 0x9C, 0xE0, 0x31, 0xCE,
		0x38, 0x38, 0xE7, 0x1C, 0x1C, 0x73, 0x8E, 0x0C, 0x39, 0xC3, 0x8E, 0x1C,
		0xE1, 0xC7, 0x0E, 0x70, 0xE3, 0x07, 0x38, 0x3B, 0x83, 0x98, 0x1D, 0xC1,
		0xDC, 0x0E, 0xC0, 0xFE, 0x03, 0x60, 0x3F, 0x01, 0xF0, 0x1F, 0x80, 0xF0,
		0x0F, 0xC0, 0x78, 0x07, 0xE0, 0x1C, 0x03, 0x80, 0x18, 0x03, 0x02, 0x19,
		0x12, 0xE0, 0x01, 0xFC, 0x00, 0x7F, 0x80, 0x1F, 0xE0, 0x07, 0xDC, 0x01,
		0xFF, 0x80, 0x7E, 0xE0, 0x1F, 0xBC, 0x07, 0xE7, 0x01, 0xF9, 0xE0, 0x7E,
		0x3C, 0x1F, 0x87, 0x07, 0xE1, 0xE1, 0xF8, 0x38, 0x7E, 0x0F, 0x1F, 0x81,
		0xE7, 0xE0, 0x39, 0xF8, 0x0F, 0x7E, 0x01, 0xDF, 0x80, 0x7F, 0xE0, 0x0F,
		0xF8, 0x01, 0xFE, 0x00, 0x7F, 0x80, 0x0F, 0xE0, 0x03, 0xC0, 0x19, 0x01,
		0x02, 0x19, 0x16, 0x00, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x7F, 0xFE, 0x07,
		0xC0, 0x7C, 0x1E, 0x00, 0xF0, 0xF0, 0x01, 0xE3, 0x80, 0x03, 0x9E, 0x00,
		0x0F, 0x70, 0x00, 0x1D, 0xC0, 0x00, 0x7F, 0x00, 0x01, 0xFC, 0x00, 0x07,
		0xF0, 0x00, 0x1F, 0xC0, 0x00, 0x7F, 0x00, 0x01, 0xDC, 0x00, 0x07, 0x70,
		0x00, 0x1D, 0xE0, 0x00, 0xF7, 0x80, 0x03, 0x8F, 0x00, 0x1E, 0x3E, 0x00,
		0xF0, 0x7C, 0x07, 0x80, 0xFF, 0xFC, 0x00, 0xFF, 0xE0, 0x00, 0xFE, 0x00,
		0x13, 0x03, 0x02, 0x19, 0x0F, 0xFF, 0xC1, 0xFF, 0xE3, 0xFF, 0xE7, 0x01,
		0xEE, 0x01, 0xDC, 0x03, 0xF8, 0x07, 0xF0, 0x07, 0xE0, 0x1F, 0xC0, 0x3B,
		0x80, 0x77, 0x01, 0xCF, 0xFF, 0x9F, 0xFC, 0x3F, 0xE0, 0x70, 0x00, 0xE0,
		0x01, 0xC0, 0x03, 0x80, 0x07, 0x00, 0x0E, 0x00, 0x1C, 0x00, 0x38, 0x00,
		0x70, 0x00, 0xE0, 0x00, 0x19, 0x01, 0x02, 0x1C, 0x17, 0x00, 0xFE, 0x00,
		0x07, 0xFF, 0x00, 0x1F, 0xFF, 0x80, 0xF8, 0x0F, 0x81, 0xE0, 0x0F, 0x07,
		0x80, 0x0F, 0x0E, 0x00, 0x0E, 0x3C, 0x00, 0x1E, 0x70, 0x00, 0x1C, 0xE0,
		0x00, 0x3B, 0xC0, 0x00, 0x77, 0x80, 0x00, 0xEF, 0x00, 0x01, 0xDE, 0x00,
		0x03, 0xBC, 0x00, 0x07, 0x78, 0x00, 0x0E, 0x70, 0x00, 0x1C, 0xF0, 0x00,
		0x79, 0xE0, 0x00, 0xE1, 0xE0, 0x03, 0xC3, 0xE0, 0x0F, 0x03, 0xE0, 0x3C,
		0x03, 0xFF, 0xF0, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0xC0, 0x00, 0x0F, 0xF8,
		0x00, 0x03, 0xF0, 0x00, 0x00, 0xE0, 0x13, 0x03, 0x02, 0x19, 0x10, 0xFF,
		0xC0, 0xFF, 0xF0, 0xF9, 0xF8, 0xE0, 0x3C, 0xE0, 0x1C, 0xE0, 0x1E, 0xE0,
		0x1E, 0xE0, 0x0E, 0xE0, 0x1C, 0xE0, 0x1C, 0xE0, 0x3C, 0xE0, 0x78, 0xFF,
		0xF0, 0xFF, 0xC0, 0xE3, 0xF0, 0xE0, 0x78, 0xE0, 0x38, 0xE0, 0x38, 0xE0,
		0x1C, 0xE0, 0x1C, 0xE0, 0x1C, 0xE0, 0x1C, 0xE0, 0x1E, 0xE0, 0x0E, 0xE0,
		0x0E, 0x12, 0x02, 0x02, 0x19, 0x0E, 0x07, 0xF0, 0x7F, 0xE3, 0xFF, 0x9E,
		0x00, 0xF0, 0x03, 0x80, 0x0E, 0x00, 0x38, 0x00, 0xF0, 0x01, 0xE0, 0x07,
		0xE0, 0x07, 0xE0, 0x0F, 0xE0, 0x07, 0xC0, 0x07, 0x80, 0x0F, 0x00, 0x1C,
		0x00, 0x70, 0x01, 0xC0, 0x07, 0x00, 0x3F, 0x01, 0xEF, 0xFF, 0x3F, 0xF8,
		0x3F, 0x80, 0x12, 0x00, 0x02, 0x19, 0x12, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFC, 0x07, 0x80, 0x01, 0xE0, 0x00, 0x78, 0x00, 0x1E, 0x00, 0x07,
		0x80, 0x01, 0xE0, 0x00, 0x78, 0x00, 0x1E, 0x00, 0x07, 0x80, 0x01, 0xE0,
		0x00, 0x78, 0x00, 0x1E, 0x00, 0x07, 0x80, 0x01, 0xE0, 0x00, 0x78, 0x00,
		0x1E, 0x00, 0x07, 0x80, 0x01, 0xE0, 0x00, 0x78, 0x00, 0x1E, 0x00, 0x07,
		0x80, 0x01, 0xE0, 0x00, 0x17, 0x03, 0x02, 0x19, 0x12, 0xE0, 0x03, 0xF8,
		0x00, 0xFE, 0x00, 0x3F, 0x80, 0x0F, 0xE0, 0x03, 0xF8, 0x00, 0xFE, 0x00,
		0x3F, 0x80, 0x0F, 0xE0, 0x03, 0xF8, 0x00, 0xFE, 0x00, 0x3F, 0x80, 0x0F,
		0xE0, 0x03, 0xF8, 0x00, 0xFE, 0x00, 0x3F, 0x80, 0x0F, 0xE0, 0x03, 0xB8,
		0x00, 0xEE, 0x00, 0x3B, 0xC0, 0x0E, 0x70, 0x07, 0x1E, 0x03, 0xC3, 0xFF,
		0xE0, 0x7F, 0xF0, 0x07, 0xF0, 0x00, 0x14, 0x00, 0x02, 0x19, 0x14, 0xF0,
		0x00, 0x77, 0x00, 0x0F, 0x70, 0x00, 0xE7, 0x80, 0x0E, 0x38, 0x01, 0xE3,
		0x80, 0x1C, 0x3C, 0x01, 0xC3, 0xC0, 0x3C, 0x1C, 0x03, 0x81, 0xC0, 0x38,
		0x1E, 0x07, 0x80, 0xE0, 0x70, 0x0E, 0x07, 0x00, 0xF0, 0xF0, 0x07, 0x0E,
		0x00, 0x70, 0xE0, 0x07, 0x9C, 0x00, 0x39, 0xC0, 0x03, 0x9C, 0x00, 0x39,
		0x80, 0x01, 0xF8, 0x00, 0x1F, 0x80, 0x01, 0xF0, 0x00, 0x0F, 0x00, 0x00,
		0xF0, 0x00, 0x1E, 0x01, 0x02, 0x19, 0x1D, 0xE0, 0x07, 0x00, 0x3F, 0x00,
		0x78, 0x01, 0xF8, 0x03, 0xE0, 0x1D, 0xE0, 0x1F, 0x00, 0xE7, 0x00, 0xF8,
		0x07, 0x38, 0x0E, 0xC0, 0x39, 0xC0, 0x77, 0x03, 0x8F, 0x03, 0xB8, 0x1C,
		0x38, 0x19, 0xC0, 0xE1, 0xC1, 0xCE, 0x07, 0x0E, 0x0E, 0x38, 0x70, 0x70,
		0x71, 0xC3, 0x81, 0xC3, 0x0E, 0x1C, 0x0E, 0x38, 0x70, 0xC0, 0x71, 0xC1,
		0xCE, 0x03, 0x8C, 0x0E, 0x70, 0x0E, 0x60, 0x73, 0x80, 0x77, 0x03, 0x98,
		0x03, 0xB8, 0x1D, 0xC0, 0x1D, 0x80, 0x6E, 0x00, 0x6C, 0x03, 0xF0, 0x03,
		0xE0, 0x1F, 0x00, 0x1F, 0x00, 0xF8, 0x00, 0xF0, 0x03, 0xC0, 0x03, 0x80,
		0x1C, 0x00, 0x15, 0x01, 0x02, 0x19, 0x13, 0xF0, 0x01, 0xCF, 0x00, 0x78,
		0xE0, 0x1E, 0x1E, 0x03, 0x81, 0xC0, 0xF0, 0x3C, 0x1C, 0x03, 0x87, 0x80,
		0x78, 0xE0, 0x07, 0xB8, 0x00, 0x77, 0x00, 0x0F, 0xC0, 0x00, 0xF8, 0x00,
		0x1E, 0x00, 0x03, 0xE0, 0x00, 0xFC, 0x00, 0x3D, 0xC0, 0x07, 0x3C, 0x01,
		0xE3, 0x80, 0x38, 0x78, 0x0E, 0x07, 0x01, 0xC0, 0xF0, 0x70, 0x0F, 0x1E,
		0x00, 0xE3, 0x80, 0x1E, 0xF0, 0x01, 0xC0, 0x13, 0x00, 0x02, 0x19, 0x13,
		0x70, 0x00, 0xEF, 0x00, 0x3C, 0xE0, 0x07, 0x1E, 0x01, 0xC1, 0xC0, 0x38,
		0x3C, 0x0E, 0x03, 0x81, 0xC0, 0x78, 0x70, 0x07, 0x0E, 0x00, 0xF3, 0x80,
		0x0E, 0x60, 0x00, 0xFC, 0x00, 0x1F, 0x00, 0x01, 0xE0, 0x00, 0x38, 0x00,
		0x07, 0x00, 0x00, 0xE0, 0x00, 0x1C, 0x00, 0x03, 0x80, 0x00, 0x70, 0x00,
		0x0E, 0x00, 0x01, 0xC0, 0x00, 0x38, 0x00, 0x07, 0x00, 0x00, 0xE0, 0x00,
		0x14, 0x01, 0x02, 0x19, 0x12, 0x7F, 0xFF, 0xDF, 0xFF, 0xF7, 0xFF, 0xF8,
		0x00, 0x1E, 0x00, 0x0F, 0x00, 0x03, 0x80, 0x01, 0xE0, 0x00, 0xF0, 0x00,
		0x38, 0x00, 0x1E, 0x00, 0x0F, 0x00, 0x03, 0x80, 0x01, 0xE0, 0x00, 0xF0,
		0x00, 0x38, 0x00, 0x1E, 0x00, 0x0F, 0x00, 0x03, 0x80, 0x01, 0xE0, 0x00,
		0xF0, 0x00, 0x38, 0x00, 0x1E, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xC0, 0x11, 0x01, 0x09, 0x12, 0x0E, 0x0F, 0xC0, 0xFF, 0xC3, 0xDF,
		0x88, 0x0E, 0x00, 0x3C, 0x00, 0x70, 0x01, 0xC1, 0xFF, 0x1F, 0xFC, 0xF0,
		0x77, 0x01, 0xDC, 0x07, 0xE0, 0x1F, 0xC0, 0xFF, 0x03, 0xDE, 0x3F, 0x3F,
		0xDC, 0x7C, 0x70, 0x14, 0x03, 0x01, 0x1A, 0x0E, 0xE0, 0x03, 0x80, 0x0E,
		0x00, 0x38, 0x00, 0xE0, 0x03, 0x80, 0x0E, 0x00, 0x38, 0x00, 0xE3, 0xE3,
		0xBF, 0xCF, 0xFF, 0xBE, 0x0F, 0xF0, 0x1F, 0x80, 0x7E, 0x01, 0xF8, 0x07,
		0xE0, 0x1F, 0x80, 0x7E, 0x01, 0xF8, 0x07, 0xE0, 0x1F, 0x80, 0x7E, 0x01,
		0xF8, 0x07, 0xE0, 0x1F, 0x80, 0x70
	};
	
	// Usage: Copy the 3 commented lines to your code, removing the comments.
	//#include "XFont.h"
	//XFont xFont;
	//#include "MyriadPro-Regular_36_1b.h"
	
	// Leave the next 3 lines here, as is.
	DataStream_P	dataStream(glyphData, sizeof(glyphData));
	XFont16BitDataStream xFontDataStream(&xFont, &dataStream);
	XFont::Font font(&fontHeader, charcodeRun, glyphDataOffset, &xFontDataStream);
	
	// The display needs to be set before using xFont.  This only needs
	// to be done once at the beginning of the program.
	// Use xFont.SetDisplay(&display, &MyriadPro_Regular_36_1b::font); to do this.
	// To change to this font anywhere after setting the display,
	// use: xFont.SetFont(&MyriadPro_Regular_36_1b::font);
}

#endif // MyriadPro_Regular_36_1b_h

